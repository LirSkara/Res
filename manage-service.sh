#!/bin/bash

# QRes OS 4 - Service Management Script
# ====================================

# –£—Å—Ç–∞–Ωshow_logs() {
    check_service_exists
    echo -e "${BLUE}üìù –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞ $SERVICE_NAME:${NC}"
    echo -e "${YELLOW}–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞${NC}"
    echo ""
    sudo journalctl -u "$SERVICE_NAME" -f
}

show_project_info() {
    echo -e "${BLUE}==================================================${NC}"
    echo -e "${GREEN}üçΩÔ∏è  QRes OS 4 - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ${NC}"
    echo -e "${BLUE}==================================================${NC}"
    echo ""
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–∏—Å–µ
    if systemctl list-unit-files | grep -q "$SERVICE_NAME.service"; then
        PROJECT_PATH=$(systemctl show "$SERVICE_NAME" -p WorkingDirectory --value 2>/dev/null || echo "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω")
        echo -e "${GREEN}üìÇ –ü—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É: ${YELLOW}$PROJECT_PATH${NC}"
        
        if [ -f "$PROJECT_PATH/.env" ]; then
            PORT=$(grep "^PORT=" "$PROJECT_PATH/.env" 2>/dev/null | cut -d'=' -f2 || echo "8000")
            echo -e "${GREEN}üåê –ü–æ—Ä—Ç: ${YELLOW}$PORT${NC}"
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
        if systemctl is-active --quiet "$SERVICE_NAME"; then
            echo -e "${GREEN}üì° API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É:${NC}"
            if ip addr show | grep -q "192.168.4.1"; then
                echo -e "   ${YELLOW}http://192.168.4.1:${PORT:-8000}${NC}"
                echo -e "   ${YELLOW}http://192.168.4.1:${PORT:-8000}/docs${NC} (–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è)"
            else
                echo -e "   ${YELLOW}http://127.0.0.1:${PORT:-8000}${NC}"
                echo -e "   ${YELLOW}http://127.0.0.1:${PORT:-8000}/docs${NC} (–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è)"
            fi
        else
            echo -e "${RED}‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (—Å–µ—Ä–≤–∏—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)${NC}"
        fi
    else
        echo -e "${RED}‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    fi
    echo ""
}–µ—Ç–æ–≤ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

SERVICE_NAME="qresos-backend"

show_help() {
    echo -e "${BLUE}==================================================${NC}"
    echo -e "${GREEN}üîß QRes OS 4 - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–º${NC}"
    echo -e "${BLUE}==================================================${NC}"
    echo ""
    echo -e "${GREEN}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:${NC}"
    echo -e "  ${YELLOW}$0 [–∫–æ–º–∞–Ω–¥–∞]${NC}"
    echo ""
    echo -e "${GREEN}–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
    echo -e "  ${YELLOW}start${NC}     - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å"
    echo -e "  ${YELLOW}stop${NC}      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å"
    echo -e "  ${YELLOW}restart${NC}   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å"
    echo -e "  ${YELLOW}status${NC}    - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞"
    echo -e "  ${YELLOW}logs${NC}      - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞"
    echo -e "  ${YELLOW}enable${NC}    - –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ—Å—Ç–∞—Ä—Ç"
    echo -e "  ${YELLOW}disable${NC}   - –û—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ—Å—Ç–∞—Ä—Ç"
    echo -e "  ${YELLOW}info${NC}      - –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ"
    echo -e "  ${YELLOW}install${NC}   - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å/–ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å"
    echo -e "  ${YELLOW}uninstall${NC} - –£–¥–∞–ª–∏—Ç—å —Å–µ—Ä–≤–∏—Å"
    echo -e "  ${YELLOW}help${NC}      - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
}

check_service_exists() {
    if ! systemctl list-unit-files | grep -q "$SERVICE_NAME.service"; then
        echo -e "${RED}‚ùå –°–µ—Ä–≤–∏—Å $SERVICE_NAME –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        echo -e "${YELLOW}üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo ./setup-autostart.sh${NC}"
        exit 1
    fi
}

start_service() {
    check_service_exists
    echo -e "${BLUE}üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ $SERVICE_NAME...${NC}"
    if sudo systemctl start "$SERVICE_NAME"; then
        echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–∏—Å —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω${NC}"
        sleep 2
        show_status
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞${NC}"
        exit 1
    fi
}

stop_service() {
    check_service_exists
    echo -e "${BLUE}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ $SERVICE_NAME...${NC}"
    if sudo systemctl stop "$SERVICE_NAME"; then
        echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–∏—Å —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–∞${NC}"
        exit 1
    fi
}

restart_service() {
    check_service_exists
    echo -e "${BLUE}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ $SERVICE_NAME...${NC}"
    if sudo systemctl restart "$SERVICE_NAME"; then
        echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–∏—Å —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω${NC}"
        sleep 2
        show_status
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞${NC}"
        exit 1
    fi
}

show_status() {
    check_service_exists
    echo -e "${BLUE}üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞ $SERVICE_NAME:${NC}"
    sudo systemctl status "$SERVICE_NAME" --no-pager -l
    echo ""
    
    if systemctl is-active --quiet "$SERVICE_NAME"; then
        echo -e "${GREEN}üü¢ –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
    else
        echo -e "${RED}üî¥ –°–µ—Ä–≤–∏—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    fi
    
    if systemctl is-enabled --quiet "$SERVICE_NAME"; then
        echo -e "${GREEN}üîÑ –ê–≤—Ç–æ—Å—Ç–∞—Ä—Ç –≤–∫–ª—é—á–µ–Ω${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –ê–≤—Ç–æ—Å—Ç–∞—Ä—Ç –æ—Ç–∫–ª—é—á–µ–Ω${NC}"
    fi
}

show_logs() {
    check_service_exists
    echo -e "${BLUE}üìù –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞ $SERVICE_NAME:${NC}"
    echo -e "${YELLOW}(–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)${NC}"
    echo ""
    sudo journalctl -u "$SERVICE_NAME" -f --no-pager
}

enable_autostart() {
    check_service_exists
    echo -e "${BLUE}üîÑ –í–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ—Å—Ç–∞—Ä—Ç–∞ –¥–ª—è $SERVICE_NAME...${NC}"
    if sudo systemctl enable "$SERVICE_NAME"; then
        echo -e "${GREEN}‚úÖ –ê–≤—Ç–æ—Å—Ç–∞—Ä—Ç –≤–∫–ª—é—á–µ–Ω${NC}"
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ—Å—Ç–∞—Ä—Ç–∞${NC}"
        exit 1
    fi
}

disable_autostart() {
    check_service_exists
    echo -e "${BLUE}‚è∏Ô∏è  –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ—Å—Ç–∞—Ä—Ç–∞ –¥–ª—è $SERVICE_NAME...${NC}"
    if sudo systemctl disable "$SERVICE_NAME"; then
        echo -e "${GREEN}‚úÖ –ê–≤—Ç–æ—Å—Ç–∞—Ä—Ç –æ—Ç–∫–ª—é—á–µ–Ω${NC}"
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ—Å—Ç–∞—Ä—Ç–∞${NC}"
        exit 1
    fi
}

install_service() {
    echo -e "${BLUE}üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ $SERVICE_NAME...${NC}"
    if [ -f "./setup-autostart.sh" ]; then
        sudo ./setup-autostart.sh
    else
        echo -e "${RED}‚ùå –§–∞–π–ª setup-autostart.sh –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        exit 1
    fi
}

uninstall_service() {
    echo -e "${BLUE}üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ $SERVICE_NAME...${NC}"
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
    if systemctl is-active --quiet "$SERVICE_NAME"; then
        sudo systemctl stop "$SERVICE_NAME"
        echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–∏—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    fi
    
    # –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ—Å—Ç–∞—Ä—Ç–∞
    if systemctl is-enabled --quiet "$SERVICE_NAME" 2>/dev/null; then
        sudo systemctl disable "$SERVICE_NAME"
        echo -e "${GREEN}‚úÖ –ê–≤—Ç–æ—Å—Ç–∞—Ä—Ç –æ—Ç–∫–ª—é—á–µ–Ω${NC}"
    fi
    
    # –£–¥–∞–ª–µ–Ω–∏–µ service —Ñ–∞–π–ª–∞
    if [ -f "/etc/systemd/system/$SERVICE_NAME.service" ]; then
        sudo rm "/etc/systemd/system/$SERVICE_NAME.service"
        echo -e "${GREEN}‚úÖ Service —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω${NC}"
    fi
    
    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ systemd
    sudo systemctl daemon-reload
    echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–∏—Å –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω${NC}"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "$1" in
    start)
        start_service
        ;;
    stop)
        stop_service
        ;;
    restart)
        restart_service
        ;;
    status)
        show_status
        ;;
    logs)
        show_logs
        ;;
    enable)
        enable_autostart
        ;;
    disable)
        disable_autostart
        ;;
    info)
        show_project_info
        ;;
    install)
        install_service
        ;;
    uninstall)
        uninstall_service
        ;;
    help|--help|-h)
        show_help
        ;;
    "")
        show_help
        ;;
    *)
        echo -e "${RED}‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1${NC}"
        echo ""
        show_help
        exit 1
        ;;
esac
